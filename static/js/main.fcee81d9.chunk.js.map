{"version":3,"sources":["components/CameraView/index.js","components/Three/model.js","components/Three/lights.js","App.js","index.js"],"names":["CameraView","props","webcamRef","useRef","canvasRef","style","position","marginLeft","marginRight","left","right","textAlign","zIndex","width","height","runPosenet","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","net","wrap","_context","prev","next","posenet","sent","console","log","setInterval","detect","stop","apply","this","arguments","drawPose","predictions","canvas","score","keypoints","mapJoints","forEach","point","x","y","beginPath","arc","Math","PI","fillStyle","fill","_ref2","_callee2","video","videoWidth","videoHeight","pose","_context2","current","readyState","estimateSinglePose","getContext","_x","react_default","createElement","react_webcam_default","ref","getAngle","p1","p2","c1","c2","m","atan2","normalize","min","max","val","getYRotation","p3","e1","abs","e2","getZRotation","Model","kp","group","_useGLTF","useGLTF","nodes","materials","useFrame","state","delta","getJoints","Ch36","skeleton","bones","rotation","z","assign","dispose","name","scale","object","mixamorig1Hips","geometry","material","Ch36_Body","preload","Lights","Fragment","intensity","castShadow","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","App","react_three_fiber_esm","colorManagement","shadowMap","camera","fov","lights","react","fallback","components_CameraView","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fcee81d9.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Webcam from \"react-webcam\";\n\nconst CameraView = (props) => {\n    const webcamRef = useRef(null);\n    const canvasRef = useRef(null);\n    const style={\n        position: \"absolute\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        textAlign: 'center',\n        zIndex: 9,\n        width: 320,\n        height: 240\n    }\n\n    const runPosenet = async () => {\n        const net = await posenet.load();\n        console.log(\"Posenet loaded\");\n        setInterval(()=>{\n            detect(net)\n        }, 100)\n    }\n\n    const drawPose = (predictions, canvas) => {\n        if(predictions.score > 0){\n            const keypoints = predictions.keypoints;\n            //console.log(keypoints)\n            props.mapJoints(keypoints)\n            keypoints.forEach((point)=>{\n                const x = point.position.x\n                const y = point.position.y\n                canvas.beginPath();\n                canvas.arc(x, y, 5, 0, 3 * Math.PI);\n                canvas.fillStyle = \"Indigo\";\n                canvas.fill();\n            })\n        }\n    }\n\n    const detect = async (net) => {\n        if (\n            typeof webcamRef.current !== \"undefined\" &&\n            webcamRef.current !== null && \n            webcamRef.current.video.readyState === 4\n        ){\n            const video = webcamRef.current.video;\n            const videoWidth = video.videoWidth;\n            const videoHeight = video.videoHeight;\n\n            webcamRef.current.video.width = videoWidth;\n            webcamRef.current.video.height = videoHeight;\n\n            canvasRef.current.width = videoWidth;\n            canvasRef.current.height = videoHeight;\n\n            const pose = await net.estimateSinglePose(video);\n            drawPose(pose, canvasRef.current.getContext(\"2d\"))\n        }\n\n    }\n\n    runPosenet();\n\n    return (\n        <div>\n            <Webcam ref={webcamRef} style={style}/>     \n            <canvas ref={canvasRef} style={style}/>\n        </div>\n    )\n}\n\nexport default CameraView\n\n\n\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useGLTF } from \"@react-three/drei\";\n\nconst CONFIDENCE = 0.3;\n\nconst getAngle = (p1, p2, c1, c2, m) => {\n  if (p1[\"score\"] > CONFIDENCE && p2[\"score\"] > CONFIDENCE) {\n    return (\n      (Math.atan2(\n        p2[\"position\"][\"y\"] - p1[\"position\"][\"y\"],\n        p2[\"position\"][\"x\"] - p1[\"position\"][\"x\"]\n      ) +\n        c1) *\n      m\n    );\n  }\n  return c2 * m;\n};\n\nconst normalize = (min, max, val) => {\n  return ((val - min) / (max - min)) * Math.PI;\n};\n\nconst getYRotation = (p1, p2, p3) => {\n  if (\n    p1[\"score\"] > CONFIDENCE &&\n    p2[\"score\"] > CONFIDENCE &&\n    p3[\"score\"] > CONFIDENCE\n  ) {\n    let e1 = Math.abs(p1[\"position\"][\"x\"] - p3[\"position\"][\"x\"]);\n    let e2 = Math.abs(p2[\"position\"][\"x\"] - p3[\"position\"][\"x\"]);\n    return normalize(-100, 100, e2 - e1) - Math.PI / 2;\n  }\n  return 0;\n};\n\nconst getZRotation = (p1, p2) => {\n  if (p1[\"score\"] > CONFIDENCE && p2[\"score\"] > CONFIDENCE) {\n    let e1 = Math.abs(p1[\"position\"][\"y\"]);\n    let e2 = Math.abs(p2[\"position\"][\"y\"]);\n    return normalize(-80, 80, e2 - e1) - Math.PI / 2;\n  }\n  return 0;\n};\n\nexport default function Model(props) {\n  let kp;\n  const group = useRef();\n  const { nodes, materials } = useGLTF(\"../../../pdm/model.glb\");\n\n  useFrame((state, delta) => {\n    kp = props.getJoints();\n    if (kp) {\n      // Left arm & elbow\n      nodes.Ch36.skeleton.bones[7].rotation.y = getAngle(\n        kp[5],\n        kp[7],\n        0,\n        0,\n        -1\n      );\n      nodes.Ch36.skeleton.bones[9].rotation.x = getAngle(kp[7], kp[9], 0, 0, 1);\n\n      //Right arm & elbow\n      nodes.Ch36.skeleton.bones[31].rotation.y = getAngle(\n        kp[8],\n        kp[6],\n        0,\n        0,\n        -1\n      );\n      nodes.Ch36.skeleton.bones[33].rotation.x = getAngle(\n        kp[10],\n        kp[8],\n        0,\n        0,\n        -1\n      );\n\n      // Left leg & knee\n      nodes.Ch36.skeleton.bones[55].rotation.z = getAngle(\n        kp[11],\n        kp[13],\n        Math.PI / 2,\n        Math.PI,\n        -1\n      );\n      //nodes.Ch36.skeleton.bones[56].rotation.z = getAngle(kp[15], kp[13], (Math.PI/2), 0, -1)\n\n      // Right leg & knee\n      nodes.Ch36.skeleton.bones[60].rotation.z = getAngle(\n        kp[12],\n        kp[14],\n        Math.PI / 2,\n        Math.PI,\n        -1\n      );\n      //nodes.Ch36.skeleton.bones[61].rotation.z = getAngle(kp[16], kp[14], (Math.PI/2), 0, -1)\n\n      // Head\n      nodes.Ch36.skeleton.bones[5].rotation.y = getYRotation(\n        kp[1],\n        kp[2],\n        kp[0]\n      );\n      nodes.Ch36.skeleton.bones[5].rotation.z = getZRotation(kp[1], kp[2]);\n    }\n  });\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group\n        name=\"Armature\"\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.01, 0.01, 0.01]}\n      >\n        <primitive object={nodes.mixamorig1Hips} />\n        <skinnedMesh\n          geometry={nodes.Ch36.geometry}\n          material={materials.Ch36_Body}\n          skeleton={nodes.Ch36.skeleton}\n        />\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"../../../pdm/model.glb\");\n","import React from 'react'\n\nconst Lights = () => {\n    return (\n        <>\n            <ambientLight intensity={0.4} />\n            <directionalLight \n                castShadow \n                position={-8, 16, -8}\n                intensity={0}\n                shadow-mapSize-width={1024}\n                shadow-mapSize-height={1024}\n                shadow-camera-far={50}\n                shadow-camera-left={-10}\n                shadow-camera-right={10}\n                shadow-camera-top={10}\n                shadow-camera-bottom={-10} />\n            <pointLight position={[0,50,0]} intensity={2} />\n        </>\n    )\n}\n\nexport default Lights","import React, { Suspense, useState } from 'react';\nimport CameraView from './components/CameraView';\nimport { Canvas } from 'react-three-fiber';\nimport Model from './components/Three/model.js';\nimport Lights from './components/Three/lights.js';\n\nfunction App() {\n  let kp;\n\n  const mapJoints = (keypoints) => {\n    kp = keypoints\n  }\n\n   const getJoints = () => {\n    return kp;\n  }\n\n  return (\n    <>\n    \n    <div style={{ position: \"relative\", width: 600, height: 600 }}>\n      \n      <Canvas\n        colorManagement\n        shadowMap\n        camera={{position: [0, 0, 2], fov: 60}}>\n          <Lights />\n          <Suspense fallback={null}>\n            <mesh position={[0,-1,0]}>\n              <Model getJoints={getJoints}/>\n            </mesh>\n          </Suspense>\n        </Canvas>\n    </div>\n    <CameraView mapJoints={mapJoints}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}